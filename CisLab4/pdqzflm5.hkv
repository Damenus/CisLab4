using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml.Serialization;

namespace CisLab4
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            Program code = new Program();
            code.zadanieA();
            code.zadanieB();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        [XmlType("car")]
        [XmlRoot("car")]
        public class Car
        {
            [XmlElement(ElementName = "model")]
            private string model;
            [XmlElement(ElementName = "engine")]
            private Engine motor;
            [XmlElement(ElementName = "year")]
            private int year;

            public string Model
            {
                get { return this.model; }
                set { this.model = value; }
            }

            public Engine Engine
            {
                get { return this.motor; }
                set { this.motor = value; }
            }

            public int Year
            {
                get { return this.year; }
                set { this.year = value; }
            }

            public Car() { }

            public Car(string model, Engine engine, int year)
            {
                this.model = model;
                this.motor = engine;
                this.year = year;
            }
        }

        public class Engine
        {
            [XmlElement(ElementName = "displacement")]
            private double displacement;
            [XmlElement(ElementName = "horsePower")]
            private double horsePower;
            [XmlAttribute(AttributeName = "model")]
            private string model;

            public double Displacement
            {
                get { return this.displacement; }
                set { this.displacement = value; }
            }

            public double HorsePower
            {
                get { return this.horsePower; }
                set { this.horsePower = value; }
            }

            public string Model
            {
                get { return this.model; }
                set { this.model = value; }
            }

            public Engine() { }

            public Engine(double displacement, double power, string model)
            {
                this.displacement = displacement;
                this.horsePower = power;
                this.model = model;
            }

        }


        public class Program
        {
            List<Car> myCars = new List<Car>(){
                    new Car("E250", new Engine(1.8, 204, "CGI"), 2009),
                    new Car("E350", new Engine(3.5, 292, "CGI"), 2009),
                    new Car("A6", new Engine(2.5, 187, "FSI"), 2012),
                    new Car("A6", new Engine(2.8, 220, "FSI"), 2012),
                    new Car("A6", new Engine(3.0, 295, "TFSI"), 2012),
                    new Car("A6", new Engine(2.0, 175, "TDI"), 2011),
                    new Car("A6", new Engine(3.0, 309, "TDI"), 2011),
                    new Car("S6", new Engine(4.0, 414, "TFSI"), 2012),
                    new Car("S8", new Engine(4.0, 513, "TFSI"), 2012)
                    };

            public Program()
            {
                BindingList<Car> myCarsBindingList = new BindingList<Car>(myCars);
                BindingSource carBindingSource = new BindingSource();
                carBindingSource.DataSource = myCarsBindingList;
                //Drag a DataGridView control from the Toolbox to the form.
               // dataGridView1.DataSource = carBindingSource;
            }

            public void zadanieA()
            {
                //a query expression syntax 
                var resultA = from e in myCars
                              where e.Model == "A6"
                              group e by new { 
                                  engineType = e.Engine.Model == "TDI" ? "disel" : "petrol",
                                  avgHPPL = e.Engine.HorsePower / e.Engine.Displacement
                              } into g
                              group g.Key.avgHPPL by g.Key.engineType into a
                              orderby a.Average() descending 
                              select new { engineType = a.Key, avgHPPL = a.Average() };


                //b method-based query syntax
                //var resultB = myCars
                //    .Where(e => e.Model == "A6")             
                //    .GroupBy(e => new { engineType = e.Engine.Model == "TDI" ? "disel" : "petrol", hppl = e.Engine.HorsePower / e.Engine.Displacement })
                //    //.GroupBy(e => e.Key.engineType,(key, d) => new { engineType = key,  Average() = d})
                //    // .Average(e => e.Key.hppl)
                //    //.GroupBy(e => e.Key.engineType, e => e.Average(), (key, d) => new { engineType = key, })
                //    //.Average(e => e.Average())
                //    // .OrderByDescending(e => e.Average())
                //     .Select(e => new { engineType = e.Key, avgHPPL = e.Average() });
                //   //.Select(e => e);


                foreach (var e in resultA) Console.WriteLine(e.engineType + ": " + e.avgHPPL);
                //foreach (var e in resultB) Console.WriteLine(e.Key + ": " + e);
            }

            public static int Compare(Car a, Car b)
            {
                if (a.Engine.HorsePower == b.Engine.HorsePower) return 0;
                else return a.Engine.HorsePower < b.Engine.HorsePower ? 1 : -1;
            }
           
            public static bool Find(Car car)
            {
                if (car.Engine.Model == "TDI")
                    return true;
                else
                    return false;
            }

            public static void ForEach(Car car)
            {
                string message = String.Format(" Model: {0}\n Silnik: {1}\n Displacement: {2}\n HorsePower: {3}\n Rok: {4}", car.Model, car.Engine.Model, car.Engine.Displacement, car.Engine.HorsePower, car.Year);
                string caption = "Opis samochodu";
                MessageBox.Show(message, caption, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }

            public void zadanieB()
            {
                Func<Car, Car, int> arg1;
                Predicate<Car> arg2;
                Action<Car> arg3;

                arg1 = new Func<Car, Car, int>(Compare);
                arg2 = new Predicate<Car>(Find);
                arg3 = new Action<Car>(ForEach);
                
                myCars.Sort(new Comparison<Car>(arg1));
                myCars.FindAll(arg2).ForEach(arg3);

            }

        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }
    }
}
